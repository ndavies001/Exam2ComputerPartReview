nums = [86, 29, 83, 45, 65, 65, 82, 87, 51, 45, 28, 40, 16, 3, 67, 30, 35, 78, 65, 94, 98, 48, 77, 89, 99, 12, 22, 90, 23, 34, 94, 45, 90, 70, 90, 52, 29, 45, 13, 35, 52, 74, 31, 10, 9, 65, 20, 77, 58, 8, 74, 57, 82, 43, 58, 98, 43, 54, 46, 94, 73, 8, 17, 43, 74, 36, 63, 65, 49, 49, 38, 2, 41, 99, 78, 80, 82, 58, 66, 54, 18, 20, 38, 23, 64, 68, 95, 6, 90, 24, 7, 48, 16, 37, 20, 75, 76, 28, 36, 22, 39, 39, 65, 80, 34, 91, 2, 76, 97, 68, 52, 63, 49, 89, 24, 88, 76, 11, 23, 18, 12, 32, 39, 100, 7, 97, 46, 84, 18, 38, 17, 94, 44, 40, 31, 45, 72, 23, 70, 18, 11, 45, 14, 56, 76, 99, 29, 74, 49, 38, 61, 27, 24, 9, 68, 94, 9, 91, 95, 31, 71, 42, 88, 41, 79, 16, 68, 63, 62, 93, 92, 83, 72, 82, 95, 88, 67, 58, 9, 79, 16, 54, 76, 18, 50, 10, 73, 91, 21, 69, 12, 53, 9, 86, 40, 34, 27, 84, 39, 70, 24, 71, 97, 69, 59, 25, 61, 35, 40, 42, 68, 21, 21, 7, 74, 3, 81, 93, 2, 28, 29, 53, 96, 18, 33, 71, 56, 12, 34, 16, 17, 54, 59, 87, 8, 29, 35, 27, 11, 74, 48, 16, 36, 73, 84, 67, 63, 97, 18, 2, 86, 9, 3, 93, 53, 41, 50, 22, 72, 49, 50, 54, 57, 55, 23, 47, 63, 73, 31, 5, 93, 20, 68, 45, 69, 24, 79, 14, 42, 79, 8, 51, 28, 9, 41, 65, 21, 83, 80, 28, 77, 51, 22, 55, 43, 99, 54, 69, 36, 4, 29, 4, 90, 72, 72, 90, 51, 77, 95, 74, 30, 58, 15, 43, 22, 23, 14, 82, 48, 71, 76, 93, 54, 35, 21, 12, 12, 78, 97, 32, 50, 60, 36, 60, 64, 97, 88, 72, 24, 68, 10, 52, 34, 39, 69, 65, 7, 37, 12, 8, 12, 69, 21, 83, 100, 59, 23, 55, 53, 34, 54, 84, 40, 26, 22, 46, 48, 10, 19, 99, 30, 71, 71, 44, 59, 50, 26, 83, 20, 32, 69, 6, 45, 50, 29, 14, 81, 43, 97, 37, 71, 5, 85, 4, 86, 78, 53, 89, 74, 3, 44, 30, 70, 47, 13, 13, 47, 57, 62, 8, 26, 72, 66, 44, 58, 27, 88, 96, 45, 30, 92, 81, 7, 12, 22, 74, 51, 22, 3, 47, 84, 9, 61, 61, 97, 53, 49, 58, 42, 33, 6, 63, 48, 15, 50, 63, 81, 15, 6, 10, 86, 39, 77, 26, 24, 3, 51, 85, 73, 47, 52, 27, 34, 14, 39, 85, 69, 78, 54, 9, 57, 55, 43, 12, 96, 28, 59, 79, 23, 78, 61, 35, 63, 22, 51, 7, 79, 39, 74, 93, 31, 87, 52, 16, 98, 82, 53, 76, 93, 11, 88, 79, 57, 83, 50, 97, 51, 58, 50, 58, 14, 20, 55, 72, 91, 25, 68, 58, 42, 76, 10, 45, 37, 44, 28, 76, 79, 3, 29, 34, 18, 70, 84, 100, 1, 99, 27, 94, 87, 99, 18, 91, 79, 86, 91, 98, 48, 93, 59, 34, 59, 31, 35, 84, 53, 76, 27, 32, 82, 15, 71, 25, 87, 81, 92, 8, 88, 48, 47, 32, 78, 36, 19, 93, 40, 59, 64, 47, 29, 18, 73, 0, 2, 42, 57, 35, 17, 96, 37, 50, 85, 95, 17, 91, 66, 35, 7, 66, 87, 15, 79, 91, 1, 84, 29, 23, 79, 7, 68, 7, 28, 56, 40, 24, 32, 84, 66, 34, 68, 65, 24, 79, 82, 6, 36, 26, 96, 43, 36, 53, 48, 92, 8, 38, 74, 66, 42, 54, 98, 12, 41, 2, 78, 90, 3, 6, 51, 92, 53, 35, 23, 16, 48, 46, 55, 68, 45, 78, 94, 55, 12, 30, 25, 48, 33, 21, 43, 22, 67, 93, 23, 48, 52, 33, 88, 29, 19, 3, 16, 60, 7, 48, 94, 12, 16, 93, 41, 30, 69, 23, 68, 78, 58, 3, 58, 88, 58, 22, 65, 12, 45, 20, 70, 41, 37, 14, 40, 24, 21, 24, 44, 37, 49, 96, 10, 49, 61, 11, 2, 94, 37, 37, 4, 27, 30, 96, 80, 89, 32, 96, 51, 48, 30, 99, 45, 14, 71, 32, 88, 81, 90, 77, 7, 92, 81, 79, 68, 96, 10, 15, 73, 63, 26, 3, 38, 32, 51, 69, 61, 2, 49, 92, 32, 50, 33, 20, 10, 6, 90, 2, 4, 11, 79, 89, 39, 81, 28, 38, 100, 98, 43, 47, 33, 64, 81, 26, 8, 87, 81, 84, 67, 46, 93, 75, 13, 46, 89, 31, 87, 77, 93, 1, 80, 16, 19, 76, 39, 84, 90, 57, 42, 5, 28, 78, 11, 77, 54, 51, 4, 24, 63, 39, 89, 2, 7, 27, 6, 78, 34, 30, 40, 66, 93, 18, 89, 15, 58, 28, 68, 80, 31, 46, 72, 97, 40, 48, 38, 76, 2, 88, 59, 5, 37, 25, 17, 48, 31, 1, 42, 37, 12, 55, 22, 3, 3, 16, 91, 16, 92, 71, 39, 8, 46, 48, 69, 93, 60, 30, 65, 86, 79, 76, 82, 62, 27, 80, 91, 30, 17, 3, 92, 72, 89, 64, 18, 80, 34, 50, 96, 61, 52, 12, 63, 51, 97, 20, 72, 66, 89, 17, 37, 43, 53, 23, 31, 32, 87, 60, 94, 68, 94, 44, 85, 76, 41, 28, 52, 96, 10, 19, 8, 54, 47, 100, 17, 20, 59, 23, 77, 68, 50, 52, 29, 84, 79, 76, 21, 46, 32, 96, 98, 33, 49, 18, 22, 9, 83, 64, 62, 43, 82, 27, 1, 64, 72, 36, 47, 36, 79, 52, 54, 4, 8, 99, 54, 46, 7, 31, 26, 14, 87, 29, 63, 16, 2, 75, 47, 97, 17, 16, 90, 65, 89, 23, 22, 30, 24, 57, 34, 28]

###############################################################################
# DONE: 1.
#
#   In this module, we will be practicing our accumlator patterns. You will be
#   using the list of numbers above. It is a list containing 1000 numbers from
#   0 to 100 (inclusive).
#
#   For this _TODO_, write a block of code that loops through the list of
#   numbers and counts how many numbers are below 10. It should print the
#   result.
#
#   For your reference, there are 86 numbers that are less than 10.
#
#   Make sure you use the accumulator pattern for your solution.
#
#   Once you have done this, then change the above _TODO_ to DONE.
###############################################################################
numbers = list(range(101))

count_below_10 = 0

for num in numbers:
    if num < 10:
        count_below_10 += 1

print("The number of numbers below 10:", count_below_10)

###############################################################################
# DONE: 2.
#
#   For this _TODO_, write a block of code that adds up all the numbers in this
#   list. It should print the result.
#
#   For your reference, the answer is 49876.
#
#   Make sure you use the accumulator pattern for your solution.
#
#   Once you have done this, then change the above _TODO_ to DONE.
###############################################################################
numbers = list(range(101))

total_sum = 0

for num in numbers:
    total_sum += num

print("The sum of all numbers in the list:", total_sum)

###############################################################################
# Done: 3.
#
#   For this _TODO_, write a block of code that creates a string of 0s and 1s
#   based on how many 0s and 1s are in the string. The 0s and 1s should appear
#   in the same order as they do in the list. It should print the result.
#
#   For your reference, the answer is "101111".
#
#   Make sure you use the accumulator pattern in your solution.
#
#   Once you have done this, then change the above _TODO_ to DONE.
###############################################################################

numbers = list(range(101))
binary_string = ""

for num in numbers:
    if num % 2 == 0:
        binary_string += "0"
    else:
        binary_string += "1"

print("Binary string based on the list:", binary_string)

###############################################################################
# Done: 4.
#
#   For this _TODO_, write a block of code that splits the list into two lists:
#   one with all the numbers less than or equal to 50 and one with all the
#   numbers greater than 50. It should print the two lists.
#
#   For reference, your solution should end up with two lists that look
#   something like this.
#
#       Lower 50: [29, 45, 45, 28, ..., 30, 24, 34, 28]
#       Upper 50: [86, 83, 65, 65, ..., 90, 65, 89, 57]
#
#   Make sure you use the accumulator pattern in your solution.
#
#   Once you have done this, then change the above _TODO_ to DONE.
###############################################################################
numbers = list(range(101))

lower_50 = []
upper_50 = []

for num in numbers:
    if num <= 50:
        lower_50.append(num)
    else:
        upper_50.append(num)

print("Lower 50:", lower_50)
print("Upper 50:", upper_50)

